# 《攻城掠地》桌游项目 - 生产环境Dockerfile
# 多阶段构建，优化镜像大小和安全性

# ===== 构建阶段 =====
FROM node:18-alpine AS builder

# 设置工作目录
WORKDIR /app

# 安装构建依赖
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git

# 复制package文件
COPY package*.json ./

# 安装依赖 (仅生产依赖)
RUN npm ci --only=production && npm cache clean --force

# 复制源代码
COPY . .

# 移除开发文件
RUN rm -rf \
    .git \
    .github \
    .vscode \
    tests \
    docs/development \
    *.md \
    .env.* \
    deployment

# ===== 运行时阶段 =====
FROM node:18-alpine AS runtime

# 设置标签
LABEL maintainer="siege-game-team" \
      version="1.0.0" \
      description="《攻城掠地》桌游项目生产环境" \
      org.opencontainers.image.source="https://github.com/xiangyaohan/BattleGame"

# 安装运行时依赖
RUN apk add --no-cache \
    dumb-init \
    curl \
    ca-certificates \
    tzdata && \
    # 清理缓存
    rm -rf /var/cache/apk/*

# 设置时区
ENV TZ=Asia/Shanghai
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# 创建应用用户
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001 -G nodejs

# 设置工作目录
WORKDIR /app

# 从构建阶段复制文件
COPY --from=builder --chown=nextjs:nodejs /app .

# 创建必要的目录
RUN mkdir -p /app/logs /app/uploads /app/temp && \
    chown -R nextjs:nodejs /app/logs /app/uploads /app/temp

# 设置环境变量
ENV NODE_ENV=production \
    PORT=8000 \
    HOST=0.0.0.0 \
    LOG_LEVEL=info \
    # 内存优化
    NODE_OPTIONS="--max-old-space-size=512" \
    # 安全设置
    NODE_TLS_REJECT_UNAUTHORIZED=1

# 暴露端口
EXPOSE 8000

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# 切换到非root用户
USER nextjs

# 启动应用
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "server.js"]