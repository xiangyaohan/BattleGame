# 《攻城掠地》桌游项目 - Nginx配置文件
# 用于反向代理和静态文件服务

# 上游服务器配置 (Node.js应用)
upstream siege_game_backend {
    # PM2集群模式下的多个实例
    server 127.0.0.1:8000 weight=1 max_fails=3 fail_timeout=30s;
    # 如果有多个实例，可以添加更多服务器
    # server 127.0.0.1:8001 weight=1 max_fails=3 fail_timeout=30s;
    
    # 负载均衡方法
    # least_conn; # 最少连接数
    # ip_hash;    # IP哈希
    keepalive 32; # 保持连接池
}

# 限制请求频率
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=static_limit:10m rate=50r/s;

# 缓存配置
proxy_cache_path /var/cache/nginx/siege_game levels=1:2 keys_zone=siege_cache:10m max_size=1g inactive=60m use_temp_path=off;

# HTTP服务器 (重定向到HTTPS)
server {
    listen 80;
    listen [::]:80;
    server_name yourdomain.com www.yourdomain.com; # 替换为实际域名
    
    # 强制重定向到HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS服务器 (主配置)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name yourdomain.com www.yourdomain.com; # 替换为实际域名
    
    # SSL证书配置
    ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem; # 替换为实际路径
    ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem; # 替换为实际路径
    
    # SSL安全配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # 安全头部
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'self';" always;
    
    # 根目录
    root /var/www/siege-game/public;
    index index.html index.htm;
    
    # 日志配置
    access_log /var/log/nginx/siege_game_access.log combined;
    error_log /var/log/nginx/siege_game_error.log warn;
    
    # 客户端配置
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # 静态文件缓存
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|txt|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Served-By "Nginx";
        
        # 限制请求频率
        limit_req zone=static_limit burst=20 nodelay;
        
        # 尝试直接提供文件，否则代理到后端
        try_files $uri @backend;
    }
    
    # 游戏规则文档
    location /rules/ {
        alias /var/www/siege-game/docs/rules/;
        expires 1d;
        add_header Cache-Control "public";
        
        # 自动索引
        autoindex on;
        autoindex_exact_size off;
        autoindex_localtime on;
    }
    
    # WordPress插件文件
    location /wp-plugin/ {
        alias /var/www/siege-game/wp-plugin/;
        expires 1d;
        add_header Cache-Control "public";
    }
    
    # API接口
    location /api/ {
        # 限制请求频率
        limit_req zone=api_limit burst=5 nodelay;
        
        # 代理到后端
        proxy_pass http://siege_game_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 超时配置
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # 缓存配置
        proxy_cache siege_cache;
        proxy_cache_valid 200 302 10m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;
        
        # 添加缓存状态头部
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # 健康检查
    location /health {
        proxy_pass http://siege_game_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 不缓存健康检查
        proxy_cache off;
        
        # 内部访问
        allow 127.0.0.1;
        allow ::1;
        deny all;
    }
    
    # 主页面和其他路由
    location / {
        # 首先尝试静态文件，然后代理到后端
        try_files $uri $uri/ @backend;
        
        # 缓存静态页面
        expires 1h;
        add_header Cache-Control "public";
    }
    
    # 后端代理配置
    location @backend {
        proxy_pass http://siege_game_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 超时配置
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # 缓存配置
        proxy_cache siege_cache;
        proxy_cache_valid 200 302 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        
        # 添加缓存状态头部
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # 禁止访问敏感文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(env|config|log)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 机器人文件
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }
    
    location = /favicon.ico {
        log_not_found off;
        access_log off;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # 错误页面
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /var/www/siege-game/public;
        internal;
    }
    
    location = /50x.html {
        root /var/www/siege-game/public;
        internal;
    }
}

# 管理界面 (可选，仅内网访问)
server {
    listen 8080;
    server_name localhost;
    
    # 仅允许本地访问
    allow 127.0.0.1;
    allow ::1;
    deny all;
    
    location /nginx_status {
        stub_status on;
        access_log off;
    }
    
    location /pm2_status {
        proxy_pass http://127.0.0.1:9615; # PM2监控端口
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}