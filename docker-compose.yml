version: '3.8'

services:
  siege-game:
    build: .
    container_name: siege-board-game
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - PORT=8000
      - HOST=0.0.0.0
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const options = { host: 'localhost', port: 8000, timeout: 2000 }; const request = http.request(options, (res) => { process.exit(res.statusCode === 200 ? 0 : 1); }); request.on('error', () => { process.exit(1); }); request.end();"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - siege-network

  # 可选：添加 Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: siege-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - siege-game
    restart: unless-stopped
    networks:
      - siege-network
    profiles:
      - with-nginx

networks:
  siege-network:
    driver: bridge

# 开发环境配置
---
version: '3.8'

services:
  siege-game-dev:
    build: .
    container_name: siege-board-game-dev
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - PORT=8000
      - HOST=0.0.0.0
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped
    networks:
      - siege-dev-network
    profiles:
      - dev

networks:
  siege-dev-network